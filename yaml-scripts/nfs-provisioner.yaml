---
# Service Account for the NFS Provisioner
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nfs-provisioner
  namespace: kube-system

---
# ClusterRole for NFS Provisioner Permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nfs-provisioner-role
rules:
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["get", "list", "watch", "create", "delete"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "update"]
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "update", "patch"]
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]

---
# Bind the ClusterRole to the ServiceAccount
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nfs-provisioner-binding
subjects:
- kind: ServiceAccount
  name: nfs-provisioner
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: nfs-provisioner-role
  apiGroup: rbac.authorization.k8s.io

---
# Deployment for the NFS Provisioner
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nfs-provisioner
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nfs-provisioner
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nfs-provisioner
    spec:
      serviceAccountName: nfs-provisioner
      containers:
      - name: nfs-provisioner
        image: gcr.io/k8s-staging-sig-storage/nfs-subdir-external-provisioner:v4.0.2
        env:
        - name: PROVISIONER_NAME
          value: nfs-provisioner
        - name: NFS_SERVER
          value: 192.168.64.1
        - name: NFS_PATH
          value: /Users/<username>/nfs-share
        volumeMounts:
        - name: nfs-client-root
          mountPath: /persistentvolumes
      volumes:
      - name: nfs-client-root
        nfs:
          server: 192.168.64.1
          path: /Users/<username>/nfs-share

---
# StorageClass Definition (Delete Policy)
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: nfs-storage-delete
provisioner: nfs-provisioner
reclaimPolicy: Delete
parameters:
  archiveOnDelete: "false"  # Set to "true" to archive instead of delete

---
# New StorageClass Definition (Retain Policy)
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: nfs-storage-retain
provisioner: nfs-provisioner
reclaimPolicy: Retain
parameters:
  archiveOnDelete: "false"  # Set to "true" to archive instead of delete
mountOptions:
  - vers=3  # Force NFSv3